import random
import requests
import json
import time
import asyncio
import logging
import tempfile
import os
import dropbox
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, InputFile
from telegram.ext import Application, CommandHandler, ContextTypes, CallbackQueryHandler, MessageHandler, filters
from dropbox import Dropbox
from dropbox.exceptions import ApiError

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
LOG_CHAT_ID = -1002497223445  # –ó–¥–µ—Å—å —É–∫–∞–∑—ã–≤–∞–µ–º ID —á–∞—Ç–∞ —Å –ª–æ–≥–∞–º–∏

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Dropbox
APP_KEY = os.getenv("DROPBOX_APP_KEY")
APP_SECRET = os.getenv("DROPBOX_APP_SECRET")
REFRESH_TOKEN = os.getenv("DROPBOX_REFRESH_TOKEN")

# –ü—É—Ç—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
TOKEN_FILE = 'dropbox_token.json'

def refresh_access_token():
    url = "https://api.dropbox.com/oauth2/token"
    headers = {"Content-Type": "application/x-www-form-urlencoded"}
    data = {
        "grant_type": "refresh_token",
        "refresh_token": REFRESH_TOKEN
    }

    response = requests.post(url, headers=headers, data=data, auth=(APP_KEY, APP_SECRET))

    if response.status_code == 200:
        access_token = response.json().get("access_token")
        return access_token
    else:
        raise Exception(f"Failed to refresh token: {response.status_code}, {response.text}")

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
access_token = refresh_access_token()

# –í –¥–∞–ª—å–Ω–µ–π—à–µ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π `access_token` –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Dropbox API

def get_new_access_token():
    url = "https://api.dropbox.com/oauth2/token"
    headers = {"Content-Type": "application/x-www-form-urlencoded"}
    data = {
        "grant_type": "refresh_token",
        "refresh_token": REFRESH_TOKEN,
        "client_id": APP_KEY,
        "client_secret": APP_SECRET
    }

    response = requests.post(url, headers=headers, data=data)

    if response.status_code == 200:
        token_data = response.json()
        token_data['expires_at'] = time.time() + token_data['expires_in']
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –≤ —Ñ–∞–π–ª
        with open(TOKEN_FILE, 'w') as token_file:
            json.dump(token_data, token_file)
        return token_data['access_token']
    else:
        print("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:", response.json())
        return None

def get_access_token():
    try:
        with open(TOKEN_FILE, 'r') as token_file:
            token_data = json.load(token_file)
            if time.time() < token_data['expires_at']:
                return token_data['access_token']
            else:
                return get_new_access_token()
    except FileNotFoundError:
        return get_new_access_token()

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –≤ –∫–æ–¥–µ
ACCESS_TOKEN = get_access_token()
dbx = Dropbox(ACCESS_TOKEN)
print("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Dropbox —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")
print("–¢–µ–∫—É—â–∏–π —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞:", ACCESS_TOKEN)

def get_dropbox_temporary_link(file_path):
    global dbx
    """
    –ü–æ–ª—É—á–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª –≤ Dropbox.
    :param file_path: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –≤ Dropbox
    :return: –í—Ä–µ–º–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –∏–ª–∏ None –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    """
    try:
        result = dbx.files_get_temporary_link(file_path)  # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç
        return result.link  # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Å—ã–ª–∫—É –∏–∑ –æ–±—ä–µ–∫—Ç–∞
    except ApiError as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ Dropbox –¥–ª—è {file_path}: {e}")
        return None


# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—É—Å—Ç–∏–ª /start.")

    if context.user_data.get("has_started", False):
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É–∂–µ –∑–∞–ø—É—Å–∫–∞–ª /start —Ä–∞–Ω–µ–µ.")
        await update.message.reply_text("–ë–æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω")
        return

    context.user_data["has_started"] = True

    dropbox_file_path = "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/IMG_1729.mp4"

    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª –∏–∑ Dropbox
        link = dbx.files_get_temporary_link(dropbox_file_path).link
        await update.message.reply_video(
            video=link,
            width=720,
            height=1280
        )
        logger.info(f"–í–∏–¥–µ–æ {dropbox_file_path} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ {dropbox_file_path}: {e}")
        
    text = '''–ü—Ä–∏–≤–µ—Ç! –†–∞–¥–∞ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å ‚ô•Ô∏è‚ú®

–ò —Å–µ–≥–æ–¥–Ω—è —Ç—ã –±–µ—Å–ø–ª–∞—Ç–Ω–æ –ø–æ–ª—É—á–∏—à—å:
üéÅ –ß–µ–∫-–ª–∏—Å—Ç —Å 500 –∏–¥–µ—è–º–∏ –¥–ª—è Reels –≤ –ª—é–±—É—é –Ω–∏—à—É
üéÅ 1 —Å–∞–º—É—é –ø—Ä–æ—Å—Ç—É—é –≤–æ—Ä–æ–Ω–∫—É –ø—Ä–æ–¥–∞–∂, –∫–æ—Ç–æ—Ä—É—é –∑–∞–ø—É—Å—Ç–∏—à—å —Å—Ä–∞–∑—É –∂–µ!

–ê –µ—â–µ –≤ —á–µ–∫-–ª–∏—Å—Ç–µ —Ç–µ–±—è –∂–¥–µ—Ç –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–¥–∞—Å—Ç –ë–ï–°–ü–õ–ê–¢–ù–´–ô –£–†–û–ö –ü–û –ú–û–ù–¢–ê–ñ–£ —Ç–æ–≥–æ —Å–∞–º–æ–≥–æ —Ç—Ä–µ–Ω–¥–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ —Å–æ —Å—Ç–∏–∫–µ—Ä–∞–º–∏ –∏ wow-—ç—Ñ—Ñ–µ–∫—Ç–æ–º!

–ñ–¥—É —Ç–µ–±—è!'''

    keyboard = [
        [
            InlineKeyboardButton("–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ 50 –ù–∏—à", callback_data='strategies'),
            InlineKeyboardButton("–í–æ—Ä–æ–Ω–∫–∞", callback_data='funnel')
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(text, reply_markup=reply_markup)
    logger.info(f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}.")

    await asyncio.sleep(10)
    reminder_text = '''–ù–∞–ø–æ–º–∏–Ω–∞—é, —á—Ç–æ –≤ —á–µ–∫-–ª–∏—Å—Ç–µ —Å–ø—Ä—è—Ç–∞–Ω–æ –°–õ–û–í–û üéÅ

–ù–∞–ø–∏—à–∏ –µ–≥–æ –≤ –ë–æ—Ç –∏ –∑–∞–±–∏—Ä–∞–π –µ—â–µ –æ–¥–∏–Ω –ø–æ–¥–∞—Ä–æ–∫ –æ—Ç –º–µ–Ω—è! ‚ú®

–ê —Ç–∞–∫–∂–µ —Ç—ã –ø–æ—Å–ª–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —É—Ä–æ–∫–∞ –º–æ–∂–µ—à—å —Å–∫–∞—á–∞—Ç—å 6 —É—Ä–æ–∫–æ–≤ –ø–æ —Å—ä–µ–º–∫–µ üòç
–ö–æ—Ç–æ—Ä—ã–µ –Ω–∞—É—á–∞—Ç —Ç–µ–±—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –≥–¥–µ —É–≥–æ–¥–Ω–æ —Å –Ω–∞–≤—ã–∫–∞–º–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∞!'''
    await update.message.reply_text(reminder_text)
    logger.info("–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")

async def send_pdf(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª PDF —Ñ–∞–π–ª.")

    dropbox_pdf_path = "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/funnel.pdf"

    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ PDF —Ñ–∞–π–ª –∏–∑ Dropbox
        link = dbx.files_get_temporary_link(dropbox_pdf_path).link
        await update.message.reply_document(
            document=link,
            filename="funnel.pdf"
        )
        logger.info(f"PDF {dropbox_pdf_path} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ PDF {dropbox_pdf_path}: {e}")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–¥–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞
async def handle_text_messages(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message_text = update.message.text

    if '–û—Å–Ω–æ–≤–Ω–æ–π –∫—É—Ä—Å' in message_text:
        keyboard = [
            ["1-2 –£—Ä–æ–∫"],
            ["3-4 –£—Ä–æ–∫"],
            ["5-6 –£—Ä–æ–∫"],
            ["–§–∏–Ω–∞–ª—å–Ω—ã–π –£—Ä–æ–∫"],
            ["–ù–∞–∑–∞–¥"]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–∫ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫—É—Ä—Å–∞:", reply_markup=reply_markup)
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {update.effective_user.id} –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –∫–Ω–æ–ø–∫–∏ —É—Ä–æ–∫–æ–≤ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫—É—Ä—Å–∞.")

async def handle_text_messages(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º user_id –∏–∑ –æ–±—ä–µ–∫—Ç–∞ update
    user_id = update.effective_user.id
    message_text = update.message.text
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ: {message_text}")

    if '–û—Å–Ω–æ–≤–Ω–æ–π –∫—É—Ä—Å' in message_text:
        # –ü—Ä–∏–º–µ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–¥–∞
        keyboard = [
            ["1-2 –£—Ä–æ–∫"],
            ["3-4 –£—Ä–æ–∫"],
            ["5-6 –£—Ä–æ–∫"],
            ["–§–∏–Ω–∞–ª—å–Ω—ã–π –£—Ä–æ–∫"],
            ["–ù–∞–∑–∞–¥"]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–∫ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫—É—Ä—Å–∞:", reply_markup=reply_markup)
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {update.effective_user.id} –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –∫–Ω–æ–ø–∫–∏ —É—Ä–æ–∫–æ–≤ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫—É—Ä—Å–∞.")

    elif '–°—ä–µ–º–∫–∞' in message_text:
        # –ù–æ–≤—ã–π –±–ª–æ–∫ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ "–°—ä–µ–º–∫–∞"
        dropbox_video_paths = [
            "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–°–µ–∫—Ü–∏—è 2/1.mp4",
            "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–°–µ–∫—Ü–∏—è 2/2.mp4",
            "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–°–µ–∫—Ü–∏—è 2/3.mp4",
            "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–°–µ–∫—Ü–∏—è 2/4.mp4",
            "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–°–µ–∫—Ü–∏—è 2/5.mp4"
        ]

        for dropbox_path in dropbox_video_paths:
            try:
                # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª –∏–∑ Dropbox
                temp_link = get_dropbox_temporary_link(dropbox_path)
                if temp_link:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª —á–µ—Ä–µ–∑ –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É
                    await update.message.reply_document(temp_link, filename=os.path.basename(dropbox_path))
                    logger.info(f"–í–∏–¥–µ–æ {dropbox_path} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {update.effective_user.id} —á–µ—Ä–µ–∑ Dropbox.")
                else:
                    await update.message.reply_text(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª: {os.path.basename(dropbox_path)}")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ {dropbox_path}: {e}")
                await update.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {os.path.basename(dropbox_path)}")


        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ —Å –¥–æ–º–∞—à–Ω–∏–º –∑–∞–¥–∞–Ω–∏–µ–º
        homework_text = '''–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ :

–°–æ–∑–¥–∞–π –≤–∏–¥–µ–æ –∏–∑ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º:

‚Ä¢ –Ω–∞–ª–æ–∂–µ–Ω–∏–µ
‚Ä¢ —à—Ä–∏—Ñ—Ç
‚Ä¢ –∫–∞–¥—Ä—ã
‚Ä¢ –∏–∑–≤–ª–µ—á—å –∑–≤—É–∫
‚Ä¢ —É–º–µ–Ω—å—à–∏—Ç—å —à—É–º
‚Ä¢ –∫–ª—é—á–∏ (—Ä–æ–º–±–∏–∫–∏)
‚Ä¢ —Ü–≤–µ—Ç–æ–∫–æ—Ä—Ä–µ–∫—Ü–∏—è

–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –∂–¥—É –≤ [–ª–∏—á–Ω—ã–π —á–∞—Ç](https://t.me/domanivi), –≥–¥–µ —Ä–∞–∑–±–µ—Ä–µ–º –æ—à–∏–±–∫–∏ –∏–ª–∏ –Ω–∞–æ–±–æ—Ä–æ—Ç –≤–æ—Å—Ö–∏—Ç–∏–º—Å—è —Ç–≤–æ–µ–π —á—É–¥–µ—Å–Ω–æ–π —Ä–∞–±–æ—Ç–æ–π ü™Ñü§ç'''
        await update.message.reply_text(homework_text, parse_mode="Markdown")
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {update.effective_user.id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–æ–º–∞—à–Ω–∏–º –∑–∞–¥–∞–Ω–∏–µ–º.")

    elif '1-2 –£—Ä–æ–∫' in message_text:
        # –¢–µ–∫—Å—Ç –¥–ª—è —É—Ä–æ–∫–∞ "1-2 –£—Ä–æ–∫"
        text = '''[ –ü–∞–º—è—Ç–∫–∞ ] 

üéûÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–º–µ—Ä—ã : 
4–∫ | 60 
HD | 60 
–≠–∫—Å–ø–æ–∑–∏—Ü–∏—è -0,7 

üé¨–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∏–Ω–æ—ç—Ñ—Ñ–µ–∫—Ç–∞ : 
–ì–ª—É–±–∏–Ω–∞ 2,8 (–º–æ–∂–Ω–æ –º–µ–Ω—å—à–µ -–±–æ–ª—å—à–µ –ø–æ –≤–∞—à–µ–π –∫–∞—Ä—Ç–∏–Ω–∫–µ –∏ –∑–∞–¥—É–º–∫–µ)
–≠–∫—Å–ø–æ–∑–∏—Ü–∏—è - 1.0

üì∏ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–æ—Ç–æ
–ü–æ—Ä—Ç—Ä–µ—Ç 
–ö–æ–Ω—Ç—É—Ä–Ω—ã–π —Å–≤–µ—Ç 
–ì–ª—É–±–∏–Ω–∞ 2,8 
–°–≤–µ—Ç 30 
–≠–∫—Å–ø–æ–∑–∏—Ü–∏—è -0,7 / -1,3 (–∫–∞–∫ 
—Å–∞–º–∏ –≤–∏–¥–∏—Ç–µ)

–ß—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ —Ç–µ—Ä—è–ª–∏—Å—å –∫–∞–∂–¥—ã–π —Ä–∞–∑: 

–ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –ö–∞–º–µ—Ä–∞ - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ - [–†–µ–∂–∏–º –∫–∞–º–µ—Ä—ã], [–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ], [–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–ª—É–±–∏–Ω–æ–π], [–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ —ç–∫—Å–ø–æ–∑–∏—Ü–∏–∏], [Live photo] - —ç—Ç–æ –≤—Å–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–µ–ª–µ–Ω—ã–º!'''

        # –ü—É—Ç–∏ –∫ –≤–∏–¥–µ–æ—Ñ–∞–π–ª–∞–º
        dropbox_video_paths = [
            "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ/1.mp4",
            "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ/2.mp4"
        ]

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
        await update.message.reply_text(text)
        logger.info(f"–¢–µ–∫—Å—Ç –¥–ª—è —É—Ä–æ–∫–∞ '1-2 –£—Ä–æ–∫' –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}.")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ—Ñ–∞–π–ª—ã
        for video_path in dropbox_video_paths:
            temp_link = dbx.files_get_temporary_link(video_path).link
            await update.message.reply_document(temp_link, filename=video_path.split("/")[-1])

        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {update.effective_user.id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Ñ–∞–π–ª—ã –¥–ª—è —É—Ä–æ–∫–∞ '5-6 –£—Ä–æ–∫'.")

    elif '3-4 –£—Ä–æ–∫' in message_text:
        # –¢–µ–∫—Å—Ç –¥–ª—è —É—Ä–æ–∫–∞ "3-4 –£—Ä–æ–∫"
        text = '''[–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ]

‚Ä¢ –®—Ç–∞—Ç–∏–≤ ~ –ª–µ–≥–∫–∏–π, —Å –ø—É–ª—å—Ç–æ–º , 3-4 –Ω–æ–∂–∫–∏ 
‚Ä¢ –°–≤–µ—Ç –ø—Ä—è–º–æ–π 

–ê—Ä—Ç–∏–∫—É–ª—ã –≤ –≤–∏–¥–µ–æ, –Ω–æ –≤—ã –≤—ã–±–∏—Ä–∞–π—Ç–µ —Å–∞–º–∏ , —Ç–∫ —è –ø—Ä–∏–≤–µ–ª–∞ –ø—Ä–∏–º–µ—Ä—ã 

–£—á–∏—Ç–µ—Å—å –≤—ã–±–∏—Ä–∞—Ç—å –∫–æ–º—Ñ–æ—Ä—Ç —Å–µ–±–µ ! ü§ç

–ù–µ —Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –¥—Ä—É–≥–∏—Ö –∏–ª–∏ –Ω–∞ –º–µ–Ω—è, –º–Ω–µ —É–¥–æ–±–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ —à—Ç–∞—Ç–∏–≤–æ–º –Ω–∞ —Ç—Ä–µ—Ö –Ω–æ–∂–∫–∞—Ö, –∫–æ–º—É —Ç–æ —É–¥–æ–±–Ω–æ —Å —Ç—è–∂–µ–ª—ã–º –æ–≥—Ä–æ–º–Ω—ã–º –¥–ª—è –∫–∞–º–µ—Ä—ã !
–ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ 3 –∫–Ω–æ–ø–∫—É, 2 –≤–∏–¥–µ–æ –∏ —Ç–µ–∫—Å—Ç 
[–°–≤–µ—Ç] 
–í—ã–±–∏—Ä–∞–π—Ç–µ —Ç–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –¥–µ—Ä–∂–∞—Ç—å –≤ —Ä—É–∫–∞—Ö –∏ –≤ –∫–æ–º–ø–ª–µ–∫—Ç–µ —Å–æ —à—Ç–∞—Ç–∏–≤–æ–º (—É –≤–∞—Å –≤—Å–µ —Ç–∞–∫–∏ –Ω–µ 10 —Ä—É–∫) 

–°—Ç–∞–≤–∏—Ç–µ —Å–≤–µ—Ç –Ω–∞ —à—Ç–∞—Ç–∏–≤ –∏ —Å–Ω–∏–º–∞–µ—Ç–µ –≤–∏–¥–µ–æ! 

(–ö–æ–ª—å—Ü–µ–≤–∞—è –ª–∞–º–ø–∞ –Ω–µ —Ç–æ –∂–µ —Å–∞–º–æ–µ! –û–Ω–∞ –Ω–µ –ø–æ–¥–æ–π–¥–µ—Ç)'''

        # –ü—É—Ç–∏ –∫ –≤–∏–¥–µ–æ—Ñ–∞–π–ª–∞–º
        dropbox_video_paths = [
            "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ/3.mp4",
            "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ/4.mp4"
        ]

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
        await update.message.reply_text(text)
        logger.info(f"–¢–µ–∫—Å—Ç –¥–ª—è —É—Ä–æ–∫–∞ '3-4 –£—Ä–æ–∫' –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}.")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ—Ñ–∞–π–ª—ã
        for video_path in dropbox_video_paths:
            temp_link = dbx.files_get_temporary_link(video_path).link
            await update.message.reply_document(temp_link, filename=video_path.split("/")[-1])

        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {update.effective_user.id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Ñ–∞–π–ª—ã –¥–ª—è —É—Ä–æ–∫–∞ '3-4 –£—Ä–æ–∫'.")


    elif '5-6 –£—Ä–æ–∫' in message_text:
        dropbox_video_paths = [
            "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ/5.mp4",
            "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ/6.mp4"
        ]

        for video_path in dropbox_video_paths:
            temp_link = dbx.files_get_temporary_link(video_path).link
            await update.message.reply_document(temp_link, filename=video_path.split("/")[-1])

        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {update.effective_user.id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Ñ–∞–π–ª—ã –¥–ª—è —É—Ä–æ–∫–∞ '5-6 –£—Ä–æ–∫'.")


    elif '–§–∏–Ω–∞–ª—å–Ω—ã–π –£—Ä–æ–∫' in message_text:
        dropbox_path_7 = "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ/7.mp4"
        temp_link = get_dropbox_temporary_link(dropbox_path_7)
        if temp_link:
            await update.message.reply_document(temp_link, filename="7.mp4")
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {update.effective_user.id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Ñ–∞–π–ª—ã –¥–ª—è —É—Ä–æ–∫–∞ '–§–∏–Ω–∞–ª—å–Ω—ã–π –£—Ä–æ–∫' —á–µ—Ä–µ–∑ Dropbox.")
        else:
             await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    elif '–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ' in message_text:
        # –í–∞—à –∫–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–¥–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞ '–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ'
        congratulations_text = '''–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã –¥–æ–±—Ä–∞–ª–∞—Å—å –¥–æ –≤—Ç–æ—Ä–æ–≥–æ –ë–ï–°–ü–õ–ê–¢–ù–û–ì–û –ü–û–î–ê–†–ö–ê üéÅ
    
        –¥–æ—Ä–æ–≥–∞—è, –æ–Ω —Å–ª–æ–∂–Ω—ã–π! –ü–µ—Ä–µ—Å–º–æ—Ç—Ä–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –∏ –ø—Ä–æ–±—É–π! –ü—Ä–æ–±—É–π –¥–æ–º–∞, –≤ –æ—Ñ–∏—Å–µ —Å–Ω–∏–º–∞–π —á—Ç–æ —É–≥–æ–¥–Ω–æ, –¥–∞–∂–µ –∫—Ä–∏–≤–ª—è–Ω–∏—è.
    
        –ì–ª–∞–≤–Ω–æ–µ ‚Äî –Ω–∞—É—á–∏—Å—å, –∏ —Ç–æ–≥–¥–∞ —Å–º–æ–∂–µ—à—å —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–≤–æ–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–¥–µ–∏ üí°
    
        –°–º–æ—Ç—Ä–∏ —Å–∫–æ—Ä–µ–µ üëáüèª'''
        dropbox_video_path = "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/dos.mp4"

        await update.message.reply_text(congratulations_text)
        try:
            temp_link = dbx.files_get_temporary_link(dropbox_video_path).link
            await update.message.reply_document(temp_link, filename="dos.mp4")
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {update.effective_user.id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤—Ç–æ—Ä–æ–π –ø–æ–¥–∞—Ä–æ–∫.")
        except ApiError as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø–æ–¥–∞—Ä–∫–∞: {e}")
            await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {update.effective_user.id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤—Ç–æ—Ä–æ–π –ø–æ–¥–∞—Ä–æ–∫.")

        # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        await asyncio.sleep(10)
        additional_text = '''–¢—ã —É–∂–µ —É–∑–Ω–∞–ª–∞ –º–Ω–æ–≥–æ –≤—Å–µ–≥–æ üí°

–ò —Å–µ–π—á–∞—Å —Ö–æ—á—É —Ç–µ–±—è —Å–ø—Ä–æ—Å–∏—Ç—å‚Ä¶–∞ –µ—Å–ª–∏ –±—ã —Ç—ã —Å–º–æ–≥–ª–∞ –Ω–∞—É—á–∏—Ç—å—Å—è —Å–Ω–∏–º–∞—Ç—å —Å–µ–±—è –≤–µ–∑–¥–µ –Ω–∞ –∫–∞–º–µ—Ä—É , —Ç—ã –≤–µ–ª–∞ –±—ã –±–ª–æ–≥?

–¢—ã –º–æ–∂–µ—à—å –Ω–∞—É—á–∏—Ç—å—Å—è —Å–Ω–∏–º–∞—Ç—å GRWM, –≤–∏–¥–µ–æ –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö, –¥–æ–º–∞, –≤ —Å—Ç—É–¥–∏–∏, –≥–¥–µ —É–≥–æ–¥–Ω–æ!

–ê –≥–ª–∞–≤–Ω–æ–µ —Å–∞–º–∞ —Å–µ–±—è ! ‚ú®üòç

–ò–º–µ—è —Ç–æ–ª—å–∫–æ —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –ø–∞—Ä—É –ø–æ–º–æ—â–Ω–∏–∫–æ–≤ —Ä—è–¥–æ–º 
(–Ω–µ –æ–∂–∏–¥–∞—è –º—É–∂–∞ –∏–ª–∏ –ø–æ–¥—Ä—É–≥—É)

‚Ä¢ 5-6 —É—Ä–æ–∫–æ–≤ 
‚Ä¢ 2 —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ Reels , –∫–æ—Ç–æ—Ä—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã –∏ –∑–∞–ª–µ—Ç–∞—é—Ç –Ω–∞ 1 üçã

–í—Å–µ —ç—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –æ—Ç–∫—Ä—ã—Ç—å —Ç—É—Ç üëáüèª'''
        additional_keyboard = [[InlineKeyboardButton("‚ú®–°–∫–∞—á–∞—Ç—å —Ç—É—Ç‚ú®", callback_data='show_info')]]
        await update.message.reply_text(additional_text, reply_markup=InlineKeyboardMarkup(additional_keyboard))
        

    elif '–ù–∞–∑–∞–¥' in message_text:
        keyboard = [
            [InlineKeyboardButton("–û—Å–Ω–æ–≤–Ω–æ–π –∫—É—Ä—Å", callback_data='main_course'), InlineKeyboardButton("–°—ä–µ–º–∫–∞", callback_data='shooting')]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await update.message.reply_text("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø—Ü–∏–π:", reply_markup=reply_markup)
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –≤–µ—Ä–Ω—É–ª—Å—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–æ–π '–û—Å–Ω–æ–≤–Ω–æ–π –∫—É—Ä—Å' –∏ '–°—ä–µ–º–∫–∞'.")

    # –û—Å—Ç–∞–ª—å–Ω—ã–µ –±–ª–æ–∫–∏ elif –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π


    # –û—Å—Ç–∞–ª—å–Ω—ã–µ –±–ª–æ–∫–∏ elif –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π

    elif '–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ' in message_text:
        # –í–∞—à –∫–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–¥–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞ '–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ'
        congratulations_text = '''–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã –¥–æ–±—Ä–∞–ª–∞—Å—å –¥–æ –≤—Ç–æ—Ä–æ–≥–æ –ë–ï–°–ü–õ–ê–¢–ù–û–ì–û –ü–û–î–ê–†–ö–ê üéÅ
        
        –¥–æ—Ä–æ–≥–∞—è , –æ–Ω —Å–ª–æ–∂–Ω—ã–π ! –ü–µ—Ä–µ—Å–º–æ—Ç—Ä–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –∏ –ø—Ä–æ–±—É–π! –ü—Ä–æ–±—É–π –¥–æ–º–∞, –≤ –æ—Ñ–∏—Å–µ —Å–Ω–∏–º–∞–π —á—Ç–æ —É–≥–æ–¥–Ω–æ, –¥–∞–∂–µ –∫—Ä–∏–≤–ª—è–Ω–∏—è
        
        –ì–ª–∞–≤–Ω–æ–µ –Ω–∞—É—á–∏—Å—å –∏ —Ç–æ–≥–¥–∞ —Å–º–æ–∂–µ—à—å —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–≤–æ–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–¥–µ–∏ üí°
        
        –°–º–æ—Ç—Ä–∏ —Å–∫–æ—Ä–µ–µ üëáüèª'''
        dropbox_video_path = "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/dos.mp4"

        await update.message.reply_text(congratulations_text)
        link = dbx.files_get_temporary_link(dropbox_video_path).link
        await update.message.reply_document(document=link, filename="dos.mp4")

        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {update.effective_user.id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤—Ç–æ—Ä–æ–π –ø–æ–¥–∞—Ä–æ–∫.")

        # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        await asyncio.sleep(10)
        additional_text = '''–¢—ã —É–∂–µ —É–∑–Ω–∞–ª–∞ –º–Ω–æ–≥–æ –≤—Å–µ–≥–æ üí°

–ò —Å–µ–π—á–∞—Å —Ö–æ—á—É —Ç–µ–±—è —Å–ø—Ä–æ—Å–∏—Ç—å‚Ä¶–∞ –µ—Å–ª–∏ –±—ã —Ç—ã —Å–º–æ–≥–ª–∞ –Ω–∞—É—á–∏—Ç—å—Å—è —Å–Ω–∏–º–∞—Ç—å —Å–µ–±—è –≤–µ–∑–¥–µ –Ω–∞ –∫–∞–º–µ—Ä—É , —Ç—ã –≤–µ–ª–∞ –±—ã –±–ª–æ–≥?

–¢—ã –º–æ–∂–µ—à—å –Ω–∞—É—á–∏—Ç—å—Å—è —Å–Ω–∏–º–∞—Ç—å GRWM, –≤–∏–¥–µ–æ –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö, –¥–æ–º–∞, –≤ —Å—Ç—É–¥–∏–∏, –≥–¥–µ —É–≥–æ–¥–Ω–æ!

–ê –≥–ª–∞–≤–Ω–æ–µ —Å–∞–º–∞ —Å–µ–±—è ! ‚ú®üòç

–ò–º–µ—è —Ç–æ–ª—å–∫–æ —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –ø–∞—Ä—É –ø–æ–º–æ—â–Ω–∏–∫–æ–≤ —Ä—è–¥–æ–º 
(–Ω–µ –æ–∂–∏–¥–∞—è –º—É–∂–∞ –∏–ª–∏ –ø–æ–¥—Ä—É–≥—É)

‚Ä¢ 5-6 —É—Ä–æ–∫–æ–≤ 
‚Ä¢ 2 —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ Reels , –∫–æ—Ç–æ—Ä—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã –∏ –∑–∞–ª–µ—Ç–∞—é—Ç –Ω–∞ 1 üçã

–í—Å–µ —ç—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –æ—Ç–∫—Ä—ã—Ç—å —Ç—É—Ç üëáüèª'''
        additional_keyboard = [[InlineKeyboardButton("‚ú®–°–∫–∞—á–∞—Ç—å —Ç—É—Ç‚ú®", callback_data='show_info')]]
        await update.message.reply_text(additional_text, reply_markup=InlineKeyboardMarkup(additional_keyboard))

async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É {query.data}.")

    if query.data == 'strategies':
        dropbox_pdf_path = "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/Strategies 50 Niches.pdf"
        try:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ PDF —Ñ–∞–π–ª –∏–∑ Dropbox
            link = dbx.files_get_temporary_link(dropbox_pdf_path).link
            await query.message.reply_document(
                document=link,
                filename="Strategies_50_Niches.pdf",
                caption="–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ 50 –ù–∏—à"
            )
            logger.info(f"PDF {dropbox_pdf_path} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}.")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ PDF {dropbox_pdf_path}: {e}")
    elif query.data == 'funnel':
        dropbox_pdf_path = "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/Funnel.pdf"
        try:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ PDF —Ñ–∞–π–ª –∏–∑ Dropbox
            link = dbx.files_get_temporary_link(dropbox_pdf_path).link
            await query.message.reply_document(
                document=link,
                caption="–í–æ—Ä–æ–Ω–∫–∞",
                filename="Funnel.pdf"
            )
            logger.info(f"PDF {dropbox_pdf_path} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}.")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ PDF {dropbox_pdf_path}: {e}")

    elif query.data == 'main_course':
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —É—Ä–æ–∫–æ–≤
        keyboard = [
            [
                InlineKeyboardButton("1-2 –£—Ä–æ–∫", callback_data='lesson_1_2'),
                InlineKeyboardButton("3-4 –£—Ä–æ–∫", callback_data='lesson_3_4'),
                InlineKeyboardButton("5-6 –£—Ä–æ–∫", callback_data='lesson_5_6'),
                InlineKeyboardButton("–§–∏–Ω–∞–ª—å–Ω—ã–π –£—Ä–æ–∫", callback_data='lesson_final')
            ],
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–∫ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫—É—Ä—Å–∞:", reply_markup=reply_markup)
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤—ã–±—Ä–∞–ª –æ—Å–Ω–æ–≤–Ω–æ–π –∫—É—Ä—Å.")

    elif query.data == 'show_info':
        payment_code = random.randint(100, 999)
        text_to_show = f'''üí≥ –í—ã–±—Ä–∞–Ω —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ –∫–∞—Ä—Ç—É. üí≥

–°—É–º–º–∞ –æ–ø–ª–∞—Ç—ã: 15 000 —Ç–µ–Ω–≥–µ. 

Kaspi (–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω): 4400430274692844
Forte (–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –∫—Ä–æ–º–µ –†–§): 5177920011179996

–ö–æ–¥: {payment_code}

–£–∫–∞–∂–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å –∫–æ–¥–æ–º –∫ –ø–µ—Ä–µ–≤–æ–¥—É.'''
        
        keyboard = [[InlineKeyboardButton("–û–ø–ª–∞—á–µ–Ω–æ", callback_data=f'payment_{payment_code}')]]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await query.message.reply_text(text_to_show, reply_markup=reply_markup)
        logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–ø–ª–∞—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}. –ö–æ–¥: {payment_code}.")
    elif query.data == 'back':
        # –ö–Ω–æ–ø–∫–∏ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Ñ–∞–∑—É —Å –∫–Ω–æ–ø–∫–æ–π "–û—Å–Ω–æ–≤–Ω–æ–π –∫—É—Ä—Å" –∏ "–°—ä–µ–º–∫–∞"
        keyboard = [
            [InlineKeyboardButton("–û—Å–Ω–æ–≤–Ω–æ–π –∫—É—Ä—Å", callback_data='main_course'), InlineKeyboardButton("–°—ä–µ–º–∫–∞", callback_data='shooting')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.message.reply_text("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø—Ü–∏–π:", reply_markup=reply_markup)
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤–µ—Ä–Ω—É–ª—Å—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–æ–π '–û—Å–Ω–æ–≤–Ω–æ–π –∫—É—Ä—Å' –∏ '–°—ä–µ–º–∫–∞'.")
    elif query.data == 'shooting':
    # –ü—É—Ç–∏ –∫ –≤–∏–¥–µ–æ—Ñ–∞–π–ª–∞–º –Ω–∞ Dropbox
        dropbox_video_paths = [
            "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–°–µ–∫—Ü–∏—è 2/1.mp4",
            "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–°–µ–∫—Ü–∏—è 2/2.mp4",
            "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–°–µ–∫—Ü–∏—è 2/3.mp4",
            "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–°–µ–∫—Ü–∏—è 2/4.mp4",
            "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–°–µ–∫—Ü–∏—è 2/5.mp4"
        ]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ Dropbox
    for dropbox_path in dropbox_video_paths:
        temp_link = get_dropbox_temporary_link(dropbox_path)
        if temp_link:
            await query.message.reply_document(temp_link, filename=os.path.basename(dropbox_path))
        else:
            await query.message.reply_text(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª: {os.path.basename(dropbox_path)}")
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Ñ–∞–π–ª—ã –¥–ª—è '–°—ä–µ–º–∫–∞' —á–µ—Ä–µ–∑ Dropbox.")


async def confirm_reject_payment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    data = query.data

    if data.startswith('payment_'):
        payment_code = data.split('_')[1]
        log_message = f'''üí≥ –î–µ—Ç–∞–ª–∏ –ø–ª–∞—Ç–µ–∂–∞:
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: {user_id}
–ö–æ–¥: {payment_code}
'''
        keyboard = [
            [
                InlineKeyboardButton("–£—Å–ø–µ—à–Ω–æ", callback_data=f"confirm_{payment_code}_{user_id}"),
                InlineKeyboardButton("–û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{payment_code}_{user_id}")
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–æ–≥-—á–∞—Ç
        await context.bot.send_message(chat_id=LOG_CHAT_ID, text=log_message, reply_markup=reply_markup)
        logger.info(f"–î–µ—Ç–∞–ª–∏ –ø–ª–∞—Ç–µ–∂–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –ª–æ–≥-—á–∞—Ç. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}, –∫–æ–¥ {payment_code}.")


async def confirm_reject_payment_action(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ —Ä–∞–∑–±–∏–µ–Ω–∏–µ–º
    if len(data.split('_')) == 3:
        action, payment_code, user_id = data.split('_')
        user_id = int(user_id)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, —Ç–∞–∫ –∫–∞–∫ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º

        if action == "confirm":
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            context.user_data["is_confirmed"] = True

            # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫—É—Ä—Å–∞
            keyboard = [
                [InlineKeyboardButton("–û—Å–Ω–æ–≤–Ω–æ–π –∫—É—Ä—Å", callback_data='main_course')]
            ]
            reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "–û—Å–Ω–æ–≤–Ω–æ–π –∫—É—Ä—Å"
            text = "–ë–ª–∞–≥–æ–¥–∞—Ä—é —Ç–µ–±—è ! –ü—Ä–∏—Å—Ç—É–ø–∞–π –∫ —É–¥–æ–±–Ω–æ–º—É –æ–±—É—á–µ–Ω–∏—é –ø—Ä—è–º–æ –∑–¥–µ—Å—å –∏ –Ω–∞—á–∏–Ω–∞–π –≤–µ—Å—Ç–∏ –±–ª–æ–≥ –ø–æ—Å–ª–µ –∫—É—Ä—Å–∞ –Ω–∏–∂–µ"
            await context.bot.send_message(chat_id=user_id, text=text, reply_markup=reply_markup)
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –æ–ø–ª–∞—Ç–∞. –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫—É—Ä—Å–∞.")

        elif action == "reject":
            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞
            await context.bot.send_message(
                chat_id=user_id,
                text="–ü–ª–∞—Ç–µ–∂ –Ω–µ—É—Å–ø–µ—à–µ–Ω!\n–°–≤—è–∂–∏—Ç–µ—Å—å —Å @ne_dosand –¥–ª—è —É—Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã."
            )
            logger.info(f"–ü–ª–∞—Ç–µ–∂ —Å –∫–æ–¥–æ–º {payment_code} –æ—Ç–∫–ª–æ–Ω–µ–Ω. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏.")
    else:
        logger.error(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö callback_data: {data}")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤ –ª–æ–≥-—á–∞—Ç
        await context.bot.send_message(
            chat_id=LOG_CHAT_ID,
            text=f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö callback_data: {data}. –í–æ–∑–º–æ–∂–Ω–æ, –∫–Ω–æ–ø–∫–∞ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ –¥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö."
        )

async def handle_lesson_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {query.data}.")

    if query.data == 'lesson_1_2':
        # –¢–µ–∫—Å—Ç –¥–ª—è —É—Ä–æ–∫–∞ "1-2 –£—Ä–æ–∫"
        text = '''[ –ü–∞–º—è—Ç–∫–∞ ] 

üéûÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–º–µ—Ä—ã : 
4–∫ | 60 
HD | 60 
–≠–∫—Å–ø–æ–∑–∏—Ü–∏—è -0,7 

üé¨–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∏–Ω–æ—ç—Ñ—Ñ–µ–∫—Ç–∞ : 
–ì–ª—É–±–∏–Ω–∞ 2,8 (–º–æ–∂–Ω–æ –º–µ–Ω—å—à–µ -–±–æ–ª—å—à–µ –ø–æ –≤–∞—à–µ–π –∫–∞—Ä—Ç–∏–Ω–∫–µ –∏ –∑–∞–¥—É–º–∫–µ)
–≠–∫—Å–ø–æ–∑–∏—Ü–∏—è - 1.0

üì∏ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–æ—Ç–æ
–ü–æ—Ä—Ç—Ä–µ—Ç 
–ö–æ–Ω—Ç—É—Ä–Ω—ã–π —Å–≤–µ—Ç 
–ì–ª—É–±–∏–Ω–∞ 2,8 
–°–≤–µ—Ç 30 
–≠–∫—Å–ø–æ–∑–∏—Ü–∏—è -0,7 / -1,3 (–∫–∞–∫ 
—Å–∞–º–∏ –≤–∏–¥–∏—Ç–µ)

–ß—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ —Ç–µ—Ä—è–ª–∏—Å—å –∫–∞–∂–¥—ã–π —Ä–∞–∑: 

–ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –ö–∞–º–µ—Ä–∞ - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ - [–†–µ–∂–∏–º –∫–∞–º–µ—Ä—ã], [–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ], [–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–ª—É–±–∏–Ω–æ–π], [–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ —ç–∫—Å–ø–æ–∑–∏—Ü–∏–∏], [Live photo] - —ç—Ç–æ –≤—Å–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–µ–ª–µ–Ω—ã–º!'''

        # –ü—É—Ç—å –∫ –≤–∏–¥–µ–æ—Ñ–∞–π–ª–∞–º –≤ Dropbox
        dropbox_video_paths = [
            "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ/1.mp4",
            "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ/2.mp4"
        ]

        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
            if query.message:
                await query.message.reply_text(text)
                logger.info(f"–¢–µ–∫—Å—Ç –¥–ª—è —É—Ä–æ–∫–∞ '1-2 –£—Ä–æ–∫' –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}.")
            else:
                logger.error(f"query.message –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}.")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ—Ñ–∞–π–ª—ã
            for dropbox_path in dropbox_video_paths:
                try:
                    # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É
                    temp_link = get_dropbox_temporary_link(dropbox_path)
                    if temp_link:
                        await query.message.reply_document(temp_link, filename=os.path.basename(dropbox_path))
                        logger.info(f"–í–∏–¥–µ–æ {dropbox_path} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}.")
                    else:
                        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª: {dropbox_path}")
                        await query.message.reply_text(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª: {os.path.basename(dropbox_path)}")
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ {dropbox_path}: {e}")
                    await query.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {os.path.basename(dropbox_path)}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É—Ä–æ–∫–∞ '1-2 –£—Ä–æ–∫' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

    elif query.data == 'lesson_3_4':
        # –¢–µ–∫—Å—Ç –¥–ª—è —É—Ä–æ–∫–∞ "3-4 –£—Ä–æ–∫"
        text = '''[–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ]

‚Ä¢ –®—Ç–∞—Ç–∏–≤ ~ –ª–µ–≥–∫–∏–π, —Å –ø—É–ª—å—Ç–æ–º , 3-4 –Ω–æ–∂–∫–∏ 
‚Ä¢ –°–≤–µ—Ç –ø—Ä—è–º–æ–π 

–ê—Ä—Ç–∏–∫—É–ª—ã –≤ –≤–∏–¥–µ–æ, –Ω–æ –≤—ã –≤—ã–±–∏—Ä–∞–π—Ç–µ —Å–∞–º–∏ , —Ç–∫ —è –ø—Ä–∏–≤–µ–ª–∞ –ø—Ä–∏–º–µ—Ä—ã 

–£—á–∏—Ç–µ—Å—å –≤—ã–±–∏—Ä–∞—Ç—å –∫–æ–º—Ñ–æ—Ä—Ç —Å–µ–±–µ ! ü§ç

–ù–µ —Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –¥—Ä—É–≥–∏—Ö –∏–ª–∏ –Ω–∞ –º–µ–Ω—è, –º–Ω–µ —É–¥–æ–±–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ —à—Ç–∞—Ç–∏–≤–æ–º –Ω–∞ —Ç—Ä–µ—Ö –Ω–æ–∂–∫–∞—Ö, –∫–æ–º—É —Ç–æ —É–¥–æ–±–Ω–æ —Å —Ç—è–∂–µ–ª—ã–º –æ–≥—Ä–æ–º–Ω—ã–º –¥–ª—è –∫–∞–º–µ—Ä—ã !
–ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ 3 –∫–Ω–æ–ø–∫—É, 2 –≤–∏–¥–µ–æ –∏ —Ç–µ–∫—Å—Ç 
[–°–≤–µ—Ç] 
–í—ã–±–∏—Ä–∞–π—Ç–µ —Ç–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –¥–µ—Ä–∂–∞—Ç—å –≤ —Ä—É–∫–∞—Ö –∏ –≤ –∫–æ–º–ø–ª–µ–∫—Ç–µ —Å–æ —à—Ç–∞—Ç–∏–≤–æ–º (—É –≤–∞—Å –≤—Å–µ —Ç–∞–∫–∏ –Ω–µ 10 —Ä—É–∫) 

–°—Ç–∞–≤–∏—Ç–µ —Å–≤–µ—Ç –Ω–∞ —à—Ç–∞—Ç–∏–≤ –∏ —Å–Ω–∏–º–∞–µ—Ç–µ –≤–∏–¥–µ–æ! 

(–ö–æ–ª—å—Ü–µ–≤–∞—è –ª–∞–º–ø–∞ –Ω–µ —Ç–æ –∂–µ —Å–∞–º–æ–µ! –û–Ω–∞ –Ω–µ –ø–æ–¥–æ–π–¥–µ—Ç)'''

        # –ü—É—Ç—å –∫ –≤–∏–¥–µ–æ—Ñ–∞–π–ª–∞–º
        dropbox_video_paths = [
            "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ/3.mp4",
            "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ/4.mp4"
        ]

        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
            await query.message.reply_text(text)
            logger.info(f"–¢–µ–∫—Å—Ç –¥–ª—è —É—Ä–æ–∫–∞ '3-4 –£—Ä–æ–∫' –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}.")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ—Ñ–∞–π–ª—ã
            for dropbox_path in dropbox_video_paths:
                try:
                    temp_link = get_dropbox_temporary_link(dropbox_path)
                    if temp_link:
                        await query.message.reply_document(temp_link, filename=os.path.basename(dropbox_path))
                        logger.info(f"–í–∏–¥–µ–æ {dropbox_path} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}.")
                    else:
                        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª: {dropbox_path}")
                        await query.message.reply_text(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª: {os.path.basename(dropbox_path)}")
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ {dropbox_path}: {e}")
                    await query.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {os.path.basename(dropbox_path)}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É—Ä–æ–∫–∞ '3-4 –£—Ä–æ–∫' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

    # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è –¥—Ä—É–≥–∏—Ö —É—Ä–æ–∫–æ–≤...


    elif query.data == 'lesson_5_6':
        dropbox_video_paths = [
            "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ/5.mp4",
            "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ/6.mp4"
        ]

        for video_path in dropbox_video_paths:
            temp_link = dbx.files_get_temporary_link(video_path).link
            await query.message.reply_document(temp_link, filename=video_path.split("/")[-1])

        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Ñ–∞–π–ª—ã –¥–ª—è '5-6 –£—Ä–æ–∫'.")


    elif query.data == 'lesson_final':
        dropbox_path_7 = "/–í–∏–∫—Ç–æ—Ä–∏—è –ö—É—Ä—Å—ã –ë–æ—Ç/–ü–ª–∞—Ç–Ω—ã–µ/–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ/7.mp4"
        temp_link = get_dropbox_temporary_link(dropbox_path_7)
        if temp_link:
            await query.message.reply_document(temp_link, filename="7.mp4")
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Ñ–∞–π–ª—ã –¥–ª—è '–§–∏–Ω–∞–ª—å–Ω—ã–π –£—Ä–æ–∫' —á–µ—Ä–µ–∑ Dropbox.")
        else:
            await query.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

def main():
    application = Application.builder().token("7525962074:AAGHsMd8pCqO8MORcgeIs-eBuPvPP5oUajE").build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button_callback, pattern='^(strategies|funnel|main_course|show_info|back)$'))
    application.add_handler(CallbackQueryHandler(confirm_reject_payment, pattern='^payment_\\d+$'))
    application.add_handler(CallbackQueryHandler(confirm_reject_payment_action, pattern='^(confirm|reject)_\\d+_\\d+$'))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text_messages))
    application.add_handler(CallbackQueryHandler(handle_lesson_buttons, pattern='^(lesson_1_2|lesson_3_4|lesson_5_6|lesson_final)$'))
    application.add_handler(CommandHandler("pdf", send_pdf))


    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–±—ã—Ç–∏–π.")
    application.run_polling()

if __name__ == '__main__':
    main()
